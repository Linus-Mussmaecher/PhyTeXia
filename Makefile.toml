[tasks.build-package]
script = '''
cd ./src
rm -f mtgvortex.sty
latex mtgvortex.ins
'''

[tasks.build-documentation]
script = '''
cd ./src
latexmk -pdf -pdflatex=lualatex mtgvortex.dtx -interaction=nonstopmode > mtgvortex.out-log
'''

[tasks.build-examples]
script = '''
rm -f examples/mtgvortex.sty
rm -f examples/symbols
ln -rs src/mtgvortex.sty examples/mtgvortex.sty
ln -rs src/symbols/png-symbols/ examples/symbols
cd ./examples
latexmk -pdf -pdflatex=lualatex -interaction=nonstopmode main.tex > main.out-log
'''

[tasks.build-pngs]
script = '''
  cd ./src/symbols
  ./convert
'''

[tasks.build-tests]
script = '''
rm -f tests/mtgvortex.sty
rm -f tests/symbols
ln -rs src/mtgvortex.sty tests/mtgvortex.sty
ln -rs src/symbols/png-symbols/ tests/symbols
cd ./tests
latexmk -pdf -pdflatex=lualatex -interaction=nonstopmode cards.tex > cards.out-log
latexmk -pdf -pdflatex=lualatex -interaction=nonstopmode decks.tex > decks.out-log
latexmk -pdf -pdflatex=lualatex -interaction=nonstopmode symbols.tex > symbols.out-log
'''

[tasks.clean-examples]
script = '''
cd ./examples
latexmk -c
rm -f *.ilg *.blg *.bak *.aux *.log *.toc *.out *.brf *.lox *.toe *.thm *.fdb_latexmk *.synctex.gz *.bbl *.gin *.fls *.idx *.ind *~ *.glo *.glg *.gls *.hd *.out-log
'''

[tasks.clean-tests]
script = '''
cd ./tests
latexmk -c
rm -f *.ilg *.blg *.bak *.aux *.log *.toc *.out *.brf *.lox *.toe *.thm *.fdb_latexmk *.synctex.gz *.bbl *.gin *.fls *.idx *.ind *~ *.glo *.glg *.gls *.hd *.out-log
'''

[tasks.clean-src]
script = '''
cd src
latexmk -c mtgvortex.dtx
rm -f *.ilg *.blg *.bak *.aux *.log *.toc *.out *.brf *.lox *.toe *.thm *.fdb_latexmk *.synctex.gz *.bbl *.gin *.fls *.idx *.ind *~ *.glo *.glg *.gls *.hd *.out-log
'''

[tasks.build-all]
run_task = { name = [
  "build-pngs",
  "build-package",
  "build-documentation",
  "build-examples",
],  fork = true}

[tasks.clean-all]
dependencies = [
  "clean-src",
  "clean-examples",
  "clean-tests",
]

[tasks.build-and-test]
run_task = { name = [
  "build-package",
  "build-tests",
],  fork = true}


[tasks.default]
#TODO
